/**
 * @file pi_calculation.hpp
 * @brief Заголовочный файл для вычисления числа π с произвольной точностью
 */

#ifndef PI_CALC_H
#define PI_CALC_H

#include "../include/long_arithmetic.hpp"

/**
 * @brief Эталонное значение числа π со 100 знаками после запятой
 * 
 * Используется для верификации корректности вычислений.
 * Значение соответствует стандартной математической константе.
 */
const std::string pi_right = "3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679";

/**
 * @brief Вычисляет частичную сумму ряда для π
 * @param[out] pi Ссылка на объект FixedPoint для накопления результата
 * @param k_start Начальный индекс ряда
 * @param k_finish Конечный индекс ряда
 * @param bs Предвычисленный коэффициент для оптимизации
 * 
 * @details Реализует часть алгоритма Бэйли-Боруэйна-Плаффа.
 * Позволяет распараллеливать вычисления по диапазонам индексов.
 */
void CalcPi(FixedPoint &pi, const int k_start, const int k_finish, const FixedPoint &bs);

/**
 * @brief Вычисляет число π с заданной точностью
 * @return Объект FixedPoint, содержащий вычисленное значение π
 * 
 * @details Использует алгоритм Бэйли-Боруэйна-Плаффа для вычисления.
 * Точность результата определяется параметрами класса FixedPoint.
 * Время выполнения зависит от требуемого количества знаков.
 */
FixedPoint get_pi();

#endif // PI_CALC_H